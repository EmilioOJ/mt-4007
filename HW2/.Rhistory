install.packages("rmarkdown")
install.packages("knitr")
install.packages("evaluate")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(knitr)
booli_sold <-  read.csv("Booli_sold.csv")
r_per_kommun <- read.csv("2018_R_per_kommun.csv", , sep = ";", dec = ",")
stroke_data <-  read.csv("stroke-data.csv")
#Task 1
booli_sold <- booli_sold %>%
mutate(ppsqm = soldPrice / livingArea)
#Task 2
booli_sold %>%
arrange(desc(ppsqm)) %>%
select(booliId, ppsqm) %>%
head(n = 5) %>%
kable()
#Task 3
avergage_price <- booli_sold %>%
summarise(avg_price = mean(na.omit(ppsqm)))
kable(avergage_price)
booli_sold %>%
filter(!is.na(location.distance.ocean) & !is.na(ppsqm)) %>%
ggplot() +
geom_point(mapping = aes(x = location.distance.ocean, y = ppsqm))
# Task 1: Number of valid votes in stockholm municipalities
r_per_kommun %>%
filter(LÄNSNAMN  == "Stockholms län") %>%
summarize(total_votes_in_Stockholm = sum(RÖSTER.GILTIGA, na.rm = TRUE)) %>%
kable()
# Task 2: In which municipality did the social democratic party garner the hightest voting percentage.
r_per_kommun %>%
arrange(desc(S)) %>%
head(n=1)
# Task 3: Ranking the (3) municipialities with highest participation (valdeltagande).
r_per_kommun %>%
select(KOMMUNNAMN, VALDELTAGANDE) %>%
arrange(desc(VALDELTAGANDE)) %>%
head(n=3) %>%
kable()
stroke_data %>%
select(stroke, gender, ever_married) %>%
filter(gender != "Other") %>%
mutate(stroke = ifelse(stroke != 0, 1, 0)) %>%
group_by(ever_married, gender, stroke) %>%
summarise(count = n()) %>%
ggplot(aes(x = interaction(ever_married, gender), y = count, fill = gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequency of Stroke by if ever married and Gender",
x = "Ever married and Gender",
y = "Frequency of Stroke",
fill = "Gender")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(knitr)
booli_sold <-  read.csv("Booli_sold.csv")
r_per_kommun <- read.csv("2018_R_per_kommun.csv", , sep = ";", dec = ",")
stroke_data <-  read.csv("stroke-data.csv")
#Task 1
booli_sold <- booli_sold %>%
mutate(ppsqm = soldPrice / livingArea)
#Task 2
booli_sold %>%
arrange(desc(ppsqm)) %>%
select(booliId, ppsqm) %>%
head(n = 5) %>%
kable()
#Task 3
avergage_price <- booli_sold %>%
summarise(avg_price = mean(na.omit(ppsqm)))
kable(avergage_price)
booli_sold %>%
filter(!is.na(location.distance.ocean) & !is.na(ppsqm)) %>%
ggplot() +
geom_point(mapping = aes(x = location.distance.ocean, y = ppsqm))
# Task 1: Number of valid votes in stockholm municipalities
r_per_kommun %>%
filter(LÄNSNAMN  == "Stockholms län") %>%
summarize(total_votes_in_Stockholm = sum(RÖSTER.GILTIGA, na.rm = TRUE)) %>%
kable()
# Task 2: In which municipality did the social democratic party garner the hightest voting percentage.
r_per_kommun %>%
arrange(desc(S)) %>%
head(n=1)
# Task 3: Ranking the (3) municipialities with highest participation (valdeltagande).
r_per_kommun %>%
select(KOMMUNNAMN, VALDELTAGANDE) %>%
arrange(desc(VALDELTAGANDE)) %>%
head(n=3) %>%
kable()
stroke_data %>%
select(stroke, gender, ever_married) %>%
filter(gender != "Other") %>%
mutate(stroke = ifelse(stroke != 0, 1, 0)) %>%
group_by(ever_married, gender, stroke) %>%
summarise(count = n()) %>%
ggplot(aes(x = interaction(ever_married, gender), y = count, fill = gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequency of Stroke by if ever married and Gender",
x = "Ever married and Gender",
y = "Frequency of Stroke",
fill = "Gender")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(tidyverse)
library(knitr)
booli_sold <-  read.csv("Booli_sold.csv")
r_per_kommun <- read.csv("2018_R_per_kommun.csv", , sep = ";", dec = ",")
stroke_data <-  read.csv("stroke-data.csv")
#Task 1
booli_sold <- booli_sold %>%
mutate(ppsqm = soldPrice / livingArea)
#Task 2
booli_sold %>%
arrange(desc(ppsqm)) %>%
select(booliId, ppsqm) %>%
head(n = 5) %>%
kable()
#Task 3
avergage_price <- booli_sold %>%
summarise(avg_price = mean(na.omit(ppsqm)))
kable(avergage_price)
booli_sold %>%
filter(!is.na(location.distance.ocean) & !is.na(ppsqm)) %>%
ggplot() +
geom_point(mapping = aes(x = location.distance.ocean, y = ppsqm))
# Task 1: Number of valid votes in stockholm municipalities
r_per_kommun %>%
filter(LÄNSNAMN  == "Stockholms län") %>%
summarize(total_votes_in_Stockholm = sum(RÖSTER.GILTIGA, na.rm = TRUE)) %>%
kable()
# Task 2: In which municipality did the social democratic party garner the hightest voting percentage.
r_per_kommun %>%
arrange(desc(S)) %>%
head(n=1)
# Task 3: Ranking the (3) municipialities with highest participation (valdeltagande).
r_per_kommun %>%
select(KOMMUNNAMN, VALDELTAGANDE) %>%
arrange(desc(VALDELTAGANDE)) %>%
head(n=3) %>%
kable()
stroke_data %>%
select(stroke, gender, ever_married) %>%
filter(gender != "Other") %>%
mutate(stroke = ifelse(stroke != 0, 1, 0)) %>%
group_by(ever_married, gender, stroke) %>%
summarise(count = n()) %>%
ggplot(aes(x = interaction(ever_married, gender), y = count, fill = gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequency of Stroke by if ever married and Gender",
x = "Ever married and Gender",
y = "Frequency of Stroke",
fill = "Gender")
